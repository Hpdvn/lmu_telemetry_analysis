#!/usr/bin/env python3
"""
Test pour v√©rifier la correction de l'acc√®s √† mSession
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'python'))

from rF2data import SimInfo, Cbytestring2Python

def test_session_access():
    """Test l'acc√®s correct √† mSession"""
    try:
        print("üîç Test de l'acc√®s √† mSession...")
        
        # Initialiser la connexion
        info = SimInfo()
        print("‚úÖ Connexion √† rF2 √©tablie")
        
        # Test de l'acc√®s INCORRECT (celui qui causait l'erreur)
        try:
            session_wrong = info.Rf2Scor.mSession  # ‚ùå Ceci causait l'erreur
            print("‚ùå Acc√®s direct √† Rf2Scor.mSession (ne devrait pas fonctionner)")
        except AttributeError as e:
            print(f"‚úÖ Erreur attendue pour acc√®s direct: {e}")
        
        # Test de l'acc√®s CORRECT (la correction)
        try:
            session_correct = info.Rf2Scor.mScoringInfo.mSession  # ‚úÖ Ceci est correct
            print(f"‚úÖ Acc√®s correct √† Rf2Scor.mScoringInfo.mSession: {session_correct}")
        except AttributeError as e:
            print(f"‚ùå Erreur inattendue pour acc√®s correct: {e}")
        
        # Test de l'acc√®s √† mTrackName
        try:
            track_name = Cbytestring2Python(info.Rf2Scor.mScoringInfo.mTrackName)
            print(f"‚úÖ Acc√®s √† mTrackName: '{track_name}'")
        except AttributeError as e:
            print(f"‚ùå Erreur pour acc√®s √† mTrackName: {e}")
        
        # Affichage de la structure
        print("\nüìã Structure correcte:")
        print("  info.Rf2Scor.mScoringInfo.mSession ‚úÖ")
        print("  info.Rf2Scor.mScoringInfo.mTrackName ‚úÖ")
        print("  info.Rf2Scor.mVehicles[i].mVehicleName ‚úÖ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur g√©n√©rale: {e}")
        return False
    
    finally:
        try:
            info.close()
        except:
            pass

if __name__ == "__main__":
    print("üß™ Test de correction de l'acc√®s √† mSession")
    print("=" * 50)
    
    success = test_session_access()
    
    print("\n" + "=" * 50)
    if success:
        print("‚úÖ Test termin√© - La correction devrait fonctionner")
    else:
        print("‚ùå Des probl√®mes persistent")
